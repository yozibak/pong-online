AWSTemplateFormatVersion: 2010-09-09
Description: serverless chat pipeline resources

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AppName:
    Type: String
    Default: PongOnline
  ConnectionArn:
    Type: String
    AllowedPattern: '.+'
  FullRepositoryId:
    Type: String
    Default: yozibak/pong-online

Resources:
  # IAM ROLES
  CodePipelineExecutionRoleMain:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'iam:PassRole'
                Resource: '*'
        - PolicyName: CodeConnectionAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'codestar-connections:UseConnection'
                Resource: !Ref ConnectionArn
        - PolicyName: CodePipelineCodeAndS3Bucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetBucketAcl
                  - s3:GetBucketLocation
                Resource:
                  - !GetAtt ArtifactsBucket.Arn
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  Fn::Sub: ${ArtifactsBucket.Arn}/*
        - PolicyName: CodePipelineCodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource:
                  - !GetAtt CodeBuildProjectBuildStack.Arn
                  - !GetAtt CodeBuildProjectDeployStack.Arn
                  - !GetAtt CodeBuildProjectBuildFrontEnd.Arn
                  - !GetAtt CodeBuildProjectTest.Arn
                  - !GetAtt CodeBuildProjectDeployFrontEnd.Arn
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Tags:
        - Key: Role
          Value: aws-sam-pipeline-codebuild-service-role
      RoleName: !Sub ${AppName}-CodeBuildServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
      Policies:
        - PolicyName: CodeBuildLogs
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
        - PolicyName: CodeBuildArtifactsBucket
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:PutObject
                Resource:
                  - !Sub '${ArtifactsBucket.Arn}/*'
        - PolicyName: CodeBuildReport
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:CreateReportGroup
                  - codebuild:CreateReport
                  - codebuild:UpdateReport
                  - codebuild:BatchPutTestCases
                  - codebuild:BatchPutCodeCoverages
                Resource:
                  - !Sub 'arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/*'
        - PolicyName: AssumeStagePipeExecutionRoles
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: sts:AssumeRole
                Resource:
                  - !GetAtt PipelineExecutionRole.Arn
                  - !GetAtt PipelineFrontEndDeployRole.Arn
  PipelineExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${AppName}-PipelineExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:PrincipalTag/Role: aws-sam-pipeline-codebuild-service-role
      Policies:
        - PolicyName: PipelineExecutionRolePermissions
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: iam:PassRole
                Effect: Allow
                Resource: !GetAtt PipelineCloudFormationExecutionRole.Arn
              - Action:
                  - cloudformation:CreateChangeSet
                  - cloudformation:DescribeChangeSet
                  - cloudformation:ExecuteChangeSet
                  - cloudformation:DeleteStack
                  - cloudformation:DescribeStackEvents
                  - cloudformation:DescribeStacks
                  - cloudformation:GetTemplate
                  - cloudformation:GetTemplateSummary
                  - cloudformation:DescribeStackResource
                Resource: '*'
                Effect: Allow
              - Action:
                  - s3:DeleteObject
                  - s3:GetObject*
                  - s3:PutObject*
                  - s3:GetBucket*
                  - s3:List*
                Resource:
                  - !Sub ${ArtifactsBucket.Arn}
                  - !Sub ${ArtifactsBucket.Arn}/*
                Effect: Allow
  PipelineCloudFormationExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${AppName}-PipelineCloudFormationExecutionRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudformation.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: GrantCloudFormationFullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: '*'
                Resource: '*'
                Effect: Allow
  PipelineFrontEndDeployRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${AppName}-PipelineFrontEndDeployRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action: sts:AssumeRole
            Condition:
              StringEquals:
                aws:PrincipalTag/Role: aws-sam-pipeline-codebuild-service-role
      Policies:
        - PolicyName: GrantS3FullAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action: 's3:*'
                Resource:
                  - arn:aws:s3:::pong-online-test-webcontentbucket-*
                  - arn:aws:s3:::pong-online-test-webcontentbucket-*/*
                  - arn:aws:s3:::pong-online-prod-webcontentbucket-*
                  - arn:aws:s3:::pong-online-prod-webcontentbucket-*/*
                Effect: Allow
        - PolicyName: CloudFormationGetStack
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudformation:DescribeStacks
                Resource: '*'
                Effect: Allow
        - PolicyName: CloudFrontInvalidate
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - cloudfront:CreateInvalidation
                  - cloudfront:ListDistributions
                Resource:
                  - !Sub arn:aws:cloudfront::${AWS::AccountId}:distribution/*
                Effect: Allow

  # S3 BUCKETS
  ArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      VersioningConfiguration:
        Status: Enabled
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
  ArtifactsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref ArtifactsBucket
      PolicyDocument:
        Statement:
          - Effect: Deny
            Action: s3:*
            Principal: '*'
            Resource:
              - !GetAtt ArtifactsBucket.Arn
              - !Sub '${ArtifactsBucket.Arn}/*'
            Condition:
              Bool:
                aws:SecureTransport: false
          - Effect: Allow
            Action: s3:*
            Principal:
              AWS:
                - !GetAtt PipelineExecutionRole.Arn
            Resource:
              - !GetAtt ArtifactsBucket.Arn
              - !Sub ${ArtifactsBucket.Arn}/*

  # PIPELINE
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AppName}-Pipeline
      ArtifactStore:
        Location: !Ref ArtifactsBucket
        Type: S3
      RoleArn: !GetAtt CodePipelineExecutionRoleMain.Arn
      RestartExecutionOnUpdate: false
      Stages:
        - Name: Source
          Actions:
            - Name: SourceCodeRepo
              ActionTypeId:
                Version: '1'
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Ref ConnectionArn
                FullRepositoryId: !Ref FullRepositoryId
                BranchName: main
                OutputArtifactFormat: CODE_ZIP
              OutputArtifacts:
                - Name: SourceCodeAsZip

        - Name: Build
          Actions:
            - Name: BuildStack
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildStack
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: BuildArtifactAsZip

        - Name: Test
          Actions:
            - Name: DeployStack
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeployStack
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV_PIPELINE_EXECUTION_ROLE", "value": "${PipelineExecutionRole.Arn}"},
                    {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${PipelineCloudFormationExecutionRole.Arn}"},
                    {"name": "ENV", "value": "test"}
                  ]
              InputArtifacts:
                - Name: BuildArtifactAsZip
            - Name: BuildFrontEnd
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildFrontEnd
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV", "value": "test"}
                  ]
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: TestFrontEndBuildAsZip
            - Name: TestApplication
              RunOrder: 3
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectTest
              InputArtifacts:
                - Name: TestFrontEndBuildAsZip
            - Name: DeployFrontEnd
              RunOrder: 4
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeployFrontEnd
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV", "value": "test"}
                  ]
              InputArtifacts:
                - Name: TestFrontEndBuildAsZip

        - Name: Deploy
          Actions:
            - Name: DeployStack
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeployStack
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV_PIPELINE_EXECUTION_ROLE", "value": "${PipelineExecutionRole.Arn}"},
                    {"name": "ENV_CLOUDFORMATION_EXECUTION_ROLE", "value": "${PipelineCloudFormationExecutionRole.Arn}"},
                    {"name": "ENV", "value": "prod"}
                  ]
              InputArtifacts:
                - Name: BuildArtifactAsZip
            - Name: BuildFrontEnd
              RunOrder: 2
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectBuildFrontEnd
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV", "value": "prod"}
                  ]
              InputArtifacts:
                - Name: SourceCodeAsZip
              OutputArtifacts:
                - Name: ProdFrontEndBuildAsZip
            - Name: DeployFrontEnd
              RunOrder: 3
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              Configuration:
                ProjectName: !Ref CodeBuildProjectDeployFrontEnd
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ENV", "value": "prod"}
                  ]
              InputArtifacts:
                - Name: ProdFrontEndBuildAsZip

  CodeBuildProjectBuildStack:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        PrivilegedMode: true
        EnvironmentVariables:
          - Name: TESTING_PIPELINE_EXECUTION_ROLE
            Value: !GetAtt PipelineExecutionRole.Arn
          - Name: PROD_PIPELINE_EXECUTION_ROLE
            Value: !GetAtt PipelineExecutionRole.Arn
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: pipeline/build_stack.yaml

  CodeBuildProjectDeployStack:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub pipeline/deploy_stack.yaml

  CodeBuildProjectBuildFrontEnd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: ARTIFACTS_BUCKET
            Value: !Ref ArtifactsBucket
          - Name: FRONTEND_DEPLOY_ROLE
            Value: !GetAtt PipelineFrontEndDeployRole.Arn
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub pipeline/build_frontend.yaml

  CodeBuildProjectTest:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:7.0
        EnvironmentVariables:
          - Name: CI
            Value: true
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub pipeline/test_application.yaml

  CodeBuildProjectDeployFrontEnd:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: FRONTEND_DEPLOY_ROLE
            Value: !GetAtt PipelineFrontEndDeployRole.Arn
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
        BuildSpec: !Sub pipeline/deploy_frontend.yaml

Outputs:
  ArtifactsBucket:
    Value: !Ref ArtifactsBucket
  Pipeline:
    Value: !Ref Pipeline
